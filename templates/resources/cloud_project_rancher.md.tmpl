---
subcategory : "Managed Rancher Service (MRS)"
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# ovh_cloud_project_rancher

Manage a Rancher service in a public cloud project.

## Example Usage

{{tffile "examples/resources/cloud_project_rancher/example_1.tf"}}

## Schema

### Required

- `project_id` (String) Project ID
- `target_spec` (Attributes) Target specification for the managed Rancher service (see [below for nested schema](#nestedatt--target_spec))

### Read-Only

- `created_at` (String) Date of the managed Rancher service creation
- `current_state` (Attributes) Current configuration applied to the managed Rancher service (see [below for nested schema](#nestedatt--current_state))
- `current_tasks` (Attributes List) Asynchronous operations ongoing on the managed Rancher service (see [below for nested schema](#nestedatt--current_tasks))
- `id` (String) Unique identifier
- `resource_status` (String) Reflects the readiness of the managed Rancher service. A new target specification request will be accepted only in `READY` status
- `updated_at` (String) Date of the last managed Rancher service update

<a id="nestedatt--target_spec"></a>

### Nested Schema for `target_spec`

Required:

- `name` (String) Name of the managed Rancher service
- `plan` (String) Plan of the managed Rancher service. Available plans for an existing managed Rancher can be retrieved using GET /rancher/rancherID/capabilities/plan

Optional:

- `ip_restrictions` (Attributes List) List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed (see [below for nested schema](#nestedatt--target_spec--ip_restrictions))
- `version` (String) Version of the managed Rancher service. Available versions for an existing managed Rancher can be retrieved using ovh_cloud_project_rancher_version datasource. Default is the latest version.

<a id="nestedatt--target_spec--ip_restrictions"></a>

### Nested Schema for `target_spec.ip_restrictions`

Optional:

- `cidr_block` (String) Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)
- `description` (String) Description of the allowed CIDR block

<a id="nestedatt--current_state"></a>

### Nested Schema for `current_state`

Read-Only:

- `bootstrap_password` (String, Sensitive) Bootstrap password of the managed Rancher service, returned only on creation
- `ip_restrictions` (Attributes List) List of allowed CIDR blocks for a managed Rancher service's IP restrictions. When empty, any IP is allowed (see [below for nested schema](#nestedatt--current_state--ip_restrictions))
- `name` (String) Name of the managed Rancher service
- `networking` (Attributes) Networking properties of a managed Rancher service (see [below for nested schema](#nestedatt--current_state--networking))
- `plan` (String) Plan of the managed Rancher service
- `region` (String) Region of the managed Rancher service
- `url` (String) URL of the managed Rancher service
- `usage` (Attributes) Latest metrics regarding the usage of the managed Rancher service (see [below for nested schema](#nestedatt--current_state--usage))
- `version` (String) Version of the managed Rancher service

<a id="nestedatt--current_state--ip_restrictions"></a>

### Nested Schema for `current_state.ip_restrictions`

Read-Only:

- `cidr_block` (String) Allowed CIDR block (/subnet is optional, if unspecified then /32 will be used)
- `description` (String) Description of the allowed CIDR block

<a id="nestedatt--current_state--networking"></a>

### Nested Schema for `current_state.networking`

Read-Only:

- `egress_cidr_blocks` (List of String) Specifies the CIDR ranges for egress IP addresses used by Rancher. Ensure these ranges are allowed in any IP restrictions for services that Rancher will access.

<a id="nestedatt--current_state--usage"></a>

### Nested Schema for `current_state.usage`

Read-Only:

- `datetime` (String) Date of the sample
- `orchestrated_vcpus` (Number) Total number of vCPUs orchestrated by the managed Rancher service through the downstream clusters

<a id="nestedatt--current_tasks"></a>

### Nested Schema for `current_tasks`

Read-Only:

- `id` (String) Identifier of the current task
- `link` (String) Link to the task details
- `status` (String) Current global status of the current task
- `type` (String) Type of the current task

## Import

A share in a public cloud project can be imported using the `project_id` and `id` attributes. Using the following configuration:

{{tffile "examples/resources/cloud_project_rancher/example_2.tf"}}

You can then run:

```bash
$ terraform plan -generate-config-out=rancher.tf
$ terraform apply
```

The file `rancher.tf` will then contain the imported resource's configuration, that can be copied next to the `import` block above. See https://developer.hashicorp.com/terraform/language/import/generating-configuration for more details.
