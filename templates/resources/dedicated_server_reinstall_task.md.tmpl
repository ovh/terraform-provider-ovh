---
subcategory : "Dedicated Server"
---

{{/* This template serves as a starting point for documentation generation, and can be customized with hardcoded values and/or doc gen templates.

For example, the {{ .SchemaMarkdown }} template can be used to replace manual schema documentation if descriptions of schema attributes are added in the provider source code. */ -}}

# ovh_dedicated_server_reinstall_task

Install your Dedicated Server.

~> **WARNING** After some delay, if the task is marked as `done`, the Provider may purge it. To avoid raising errors when terraform refreshes its plan, 404 errors are ignored on Resource Read, thus some information may be lost after a while.

## Examples Usage

### Example 1 - Simple Linux Installation with password-based authentication

{{tffile "examples/resources/dedicated_server_reinstall_task/example_1.tf"}}

### Example 2 - Linux Installation with ssh key-based authentication and post-installation script

{{tffile "examples/resources/dedicated_server_reinstall_task/example_2.tf"}}

Even though the post-installation script could be sent to Terraform provider and API directly in clear text by escaping special characters, it is recommended to send a base64-encoded script to the API.

You can use the following UNIX/Linux command to encode your script:

```bash
cat my-script.sh | base64 -w0
```

Here is the clear-text post-installation bash script from the example above:

```bash
#!/bin/bash
echo "coucou postInstallationScript" > /opt/coucou
cat /etc/machine-id  >> /opt/coucou
date "+%Y-%m-%d %H:%M:%S" --utc >> /opt/coucou
```

### Example 3 - Windows Installation with French display language and PowerShell post-installation script

{{tffile "examples/resources/dedicated_server_reinstall_task/example_3.tf"}}

Even though the post-installation script could be sent to Terraform provider and API directly in clear text by escaping special characters, it is recommended to send a base64-encoded script to the API.

You can use the following PowerShell command to encode your script:

```ps1
[System.Convert]::ToBase64String((Get-Content -Path .\my-script.ps1 -Encoding Byte))
```

Here is the clear-text post-installation PowerShell script from the example above:

```ps1
"coucou postInstallationScriptPowerShell" | Out-File -FilePath "c:\ovhupd\script\coucou.txt"
(Get-ItemProperty -LiteralPath "Registry::HKLM\SOFTWARE\Microsoft\Cryptography" -Name "MachineGuid").MachineGuid | Out-File -FilePath "c:\ovhupd\script\coucou.txt" -Append
(Get-Date).ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss") | Out-File -FilePath "c:\ovhupd\script\coucou.txt" -Append
```

### Example 4 - Custom Linux image Installation with custom config drive datasource

{{tffile "examples/resources/dedicated_server_reinstall_task/example_4.tf"}}

### Example 5 - Linux Installation with custom partitioning on some disks of the default diskGroup

{{tffile "examples/resources/dedicated_server_reinstall_task/example_5.tf"}}

### Example 6 - Linux Installation with custom partitioning and hardware RAID on diskGroup 2

{{tffile "examples/resources/dedicated_server_reinstall_task/example_6.tf"}}

## Argument Reference

The following arguments are supported:

* `service_name` - (Required) The service_name of your dedicated server.

* `os` - (Required) Operating system to install.

* `bootid_on_destroy` - If set, reboot the server on the specified boot id during destroy phase.

* `customizations` - Available attributes and their types are OS-dependant. Example: `hostname`.

~> **WARNING** Some customizations may be required on some Operating Systems. [Check how to list the available and required customization(s) for your operating system](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&sysparm_article=KB0061951#os-inputs) (do not forget to adapt camel case customization name to snake case parameter).

* `properties` - Arbitrary properties to pass to cloud-init's config drive datasource. It supports any key with any string value.

* `storage`: OS reinstallation storage configurations. [More details about disks, hardware/software RAID and partitioning configuration](https://help.ovhcloud.com/csm/en-dedicated-servers-api-partitioning?id=kb_article_view&sysparm_article=KB0043882) (do not forget to adapt camel case parameters to snake case parameters).
  * `disk_group_id`: Disk group id to install the OS to (default is 0, meaning automatic).
  * `hardware_raid`: Hardware Raid configurations (if not specified, all disks of the chosen disk group id will be configured in JBOD mode).
    * `arrays`: Number of arrays (default is 1)
    * `disks`: Total number of disks in the disk group involved in the hardware raid configuration (all disks of the disk group by default)
    * `raid_level`: Hardware raid type (default is 1)
    * `spares`: Number of disks in the disk group involved in the spare (default is 0)
  * `partitioning`: Partitioning configuration
    * `disks`: Total number of disks in the disk group involved in the partitioning configuration (all disks of the disk group by default)
    * `layout`: Custom partitioning layout (default is the default layout of the operating system's default partitioning scheme). Accept multiple values (multiple partitions):
      * `file_system`: File system type
      * `mount_point`: Mount point
      * `raid_level`: Software raid type (default is 1)
      * `size`: Partition size in MiB (default value is 0 which means to fill the disk with that partition)
      * `extras`: Partition extras parameters (when applicable)
        * `lv`: LVM-specific parameters (when applicable)
          * `name`: Logical volume name
        * `zp`: ZFS-specific parameters (when applicable)
          * `name`: zpool name (generated automatically if not specified, note that multiple ZFS partitions with same zpool names will be configured as multiple datasets belonging to the same zpool if compatible)
    * `scheme_name`: Partitioning scheme (if applicable with selected operating system)

### More details

~> **WARNING** Following links are OVHcloud API documentation. You might need to adapt camel case parameters to snake case parameters to fit terraform provider requirements (Example: `postInstallationScript` -> `post_installation_script`).

- [OVHCloud API console](https://eu.api.ovh.com/console/?section=%2Fdedicated%2Fserver&branch=v1#post-/dedicated/server/-serviceName-/reinstall)

- [OVHcloud API and OS Installation](https://help.ovhcloud.com/csm/en-dedicated-servers-api-os-installation?id=kb_article_view&sysparm_article=KB0061951#install-task).

## Attributes Reference

The following attributes are exported:

* `id` - The task id
* `comment` - Details of this task. (should be `Install asked`)
* `done_date` - Completion date in RFC3339 format.
* `function` - Function name (should be `hardInstall`).
* `start_date` - Task creation date in RFC3339 format.
* `status` - Task status (should be `done`)
