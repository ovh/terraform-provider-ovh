// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"
	"encoding/json"
	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
)

func VrackOvhcloudconnectResourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"ovh_cloud_connect": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "ovhCloudConnect service name",
			MarkdownDescription: "ovhCloudConnect service name",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "The internal name of your vrack",
			MarkdownDescription: "The internal name of your vrack",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type VrackOvhcloudconnectModel struct {
	ServiceName     ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	OvhCloudConnect ovhtypes.TfStringValue `tfsdk:"ovh_cloud_connect" json:"ovhCloudConnect"`
}

func (v *VrackOvhcloudconnectModel) MergeWith(other *VrackOvhcloudconnectModel) {

	if (v.OvhCloudConnect.IsUnknown() || v.OvhCloudConnect.IsNull()) && !other.OvhCloudConnect.IsUnknown() {
		v.OvhCloudConnect = other.OvhCloudConnect
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}
}

func (v VrackOvhcloudconnectModel) ToCreate() *VrackOvhcloudconnectModel {
	res := &VrackOvhcloudconnectModel{}

	if !v.OvhCloudConnect.IsUnknown() {
		res.OvhCloudConnect = v.OvhCloudConnect
	}

	return res
}

func (v VrackOvhcloudconnectModel) ToUpdate() *VrackOvhcloudconnectModel {
	res := &VrackOvhcloudconnectModel{}

	if !v.OvhCloudConnect.IsUnknown() {
		res.OvhCloudConnect = v.OvhCloudConnect
	}

	return res
}

func (v *VrackOvhcloudconnectModel) MarshalJSON() ([]byte, error) {
	toMarshal := map[string]any{}
	if !v.OvhCloudConnect.IsNull() && !v.OvhCloudConnect.IsUnknown() {
		toMarshal["ovhCloudConnect"] = v.OvhCloudConnect
	}

	return json.Marshal(toMarshal)
}
