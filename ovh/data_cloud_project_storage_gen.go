// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework/types"
	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
)

func CloudProjectStorageDataSourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"created_at": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "The date and timestamp when the resource was created",
			MarkdownDescription: "The date and timestamp when the resource was created",
		},
		"encryption": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"sse_algorithm": schema.StringAttribute{
					CustomType:          ovhtypes.TfStringType{},
					Computed:            true,
					Description:         "Encryption algorithm",
					MarkdownDescription: "Encryption algorithm",
				},
			},
			CustomType: EncryptionType{
				ObjectType: types.ObjectType{
					AttrTypes: EncryptionValue{}.AttributeTypes(ctx),
				},
			},
			Computed:            true,
			Description:         "Encryption configuration",
			MarkdownDescription: "Encryption configuration",
		},
		"limit": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Optional:            true,
			Computed:            true,
			Description:         "Limit the number of objects returned (1000 maximum, defaults to 1000)",
			MarkdownDescription: "Limit the number of objects returned (1000 maximum, defaults to 1000)",
		},
		"marker": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "Key to start with when listing objects",
			MarkdownDescription: "Key to start with when listing objects",
		},
		"name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Name",
			MarkdownDescription: "Name",
		},
		"objects": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"etag": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "ETag",
						MarkdownDescription: "ETag",
					},
					"is_delete_marker": schema.BoolAttribute{
						CustomType:          ovhtypes.TfBoolType{},
						Computed:            true,
						Description:         "Whether this object is a delete marker",
						MarkdownDescription: "Whether this object is a delete marker",
					},
					"is_latest": schema.BoolAttribute{
						CustomType:          ovhtypes.TfBoolType{},
						Computed:            true,
						Description:         "Whether this is the latest version of the object",
						MarkdownDescription: "Whether this is the latest version of the object",
					},
					"key": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Key",
						MarkdownDescription: "Key",
					},
					"last_modified": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Last modification date",
						MarkdownDescription: "Last modification date",
					},
					"size": schema.Int64Attribute{
						CustomType:          ovhtypes.TfInt64Type{},
						Computed:            true,
						Description:         "Size (bytes)",
						MarkdownDescription: "Size (bytes)",
					},
					"storage_class": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Storage class",
						MarkdownDescription: "Storage class",
					},
					"version_id": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Version ID of the object",
						MarkdownDescription: "Version ID of the object",
					},
				},
				CustomType: ObjectsType{
					ObjectType: types.ObjectType{
						AttrTypes: ObjectsValue{}.AttributeTypes(ctx),
					},
				},
			},
			CustomType:          ovhtypes.NewTfListNestedType[ObjectsValue](ctx),
			Computed:            true,
			Description:         "Container objects",
			MarkdownDescription: "Container objects",
		},
		"objects_count": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Container total objects count",
			MarkdownDescription: "Container total objects count",
		},
		"objects_size": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Container total objects size (bytes)",
			MarkdownDescription: "Container total objects size (bytes)",
		},
		"owner_id": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Container owner user ID",
			MarkdownDescription: "Container owner user ID",
		},
		"prefix": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "List objects whose key begins with this prefix",
			MarkdownDescription: "List objects whose key begins with this prefix",
		},
		"region": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Container region",
			MarkdownDescription: "Container region",
		},
		"region_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Region name",
			MarkdownDescription: "Region name",
		},
		"replication": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"rules": schema.ListNestedAttribute{
					NestedObject: schema.NestedAttributeObject{
						Attributes: map[string]schema.Attribute{
							"delete_marker_replication": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Delete marker replication",
								MarkdownDescription: "Delete marker replication",
							},
							"destination": schema.SingleNestedAttribute{
								Attributes: map[string]schema.Attribute{
									"name": schema.StringAttribute{
										CustomType:          ovhtypes.TfStringType{},
										Computed:            true,
										Description:         "Destination bucket name",
										MarkdownDescription: "Destination bucket name",
									},
									"region": schema.StringAttribute{
										CustomType:          ovhtypes.TfStringType{},
										Computed:            true,
										Description:         "Destination region, can be null if destination bucket has been deleted",
										MarkdownDescription: "Destination region, can be null if destination bucket has been deleted",
									},
									"storage_class": schema.StringAttribute{
										CustomType:          ovhtypes.TfStringType{},
										Computed:            true,
										Description:         "Destination storage class",
										MarkdownDescription: "Destination storage class",
									},
								},
								CustomType: ReplicationRulesDestinationType{
									ObjectType: types.ObjectType{
										AttrTypes: ReplicationRulesDestinationValue{}.AttributeTypes(ctx),
									},
								},
								Computed:            true,
								Description:         "Rule destination configuration",
								MarkdownDescription: "Rule destination configuration",
							},
							"filter": schema.SingleNestedAttribute{
								Attributes: map[string]schema.Attribute{
									"prefix": schema.StringAttribute{
										CustomType:          ovhtypes.TfStringType{},
										Computed:            true,
										Description:         "Prefix filter",
										MarkdownDescription: "Prefix filter",
									},
									"tags": schema.MapAttribute{
										CustomType:          ovhtypes.NewTfMapNestedType[ovhtypes.TfStringValue](ctx),
										Computed:            true,
										Description:         "Tags filter",
										MarkdownDescription: "Tags filter",
									},
								},
								CustomType: ReplicationRulesFilterType{
									ObjectType: types.ObjectType{
										AttrTypes: ReplicationRulesFilterValue{}.AttributeTypes(ctx),
									},
								},
								Computed:            true,
								Description:         "Rule filters",
								MarkdownDescription: "Rule filters",
							},
							"id": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Rule ID",
								MarkdownDescription: "Rule ID",
							},
							"priority": schema.Int64Attribute{
								CustomType:          ovhtypes.TfInt64Type{},
								Computed:            true,
								Description:         "Rule priority",
								MarkdownDescription: "Rule priority",
							},
							"status": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Rule status",
								MarkdownDescription: "Rule status",
							},
						},
						CustomType: ReplicationRulesType{
							ObjectType: types.ObjectType{
								AttrTypes: ReplicationRulesValue{}.AttributeTypes(ctx),
							},
						},
					},
					CustomType:          ovhtypes.NewTfListNestedType[ReplicationRulesValue](ctx),
					Computed:            true,
					Description:         "Replication rules",
					MarkdownDescription: "Replication rules",
				},
			},
			CustomType: ReplicationType{
				ObjectType: types.ObjectType{
					AttrTypes: ReplicationValue{}.AttributeTypes(ctx),
				},
			},
			Computed:            true,
			Description:         "Replication configuration",
			MarkdownDescription: "Replication configuration",
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Service name",
			MarkdownDescription: "Service name",
		},
		"tags": schema.MapAttribute{
			CustomType:          ovhtypes.NewTfMapNestedType[ovhtypes.TfStringValue](ctx),
			Computed:            true,
			Description:         "Container tags",
			MarkdownDescription: "Container tags",
		},
		"versioning": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"status": schema.StringAttribute{
					CustomType:          ovhtypes.TfStringType{},
					Computed:            true,
					Description:         "Versioning status",
					MarkdownDescription: "Versioning status",
				},
			},
			CustomType: VersioningType{
				ObjectType: types.ObjectType{
					AttrTypes: VersioningValue{}.AttributeTypes(ctx),
				},
			},
			Computed:            true,
			Description:         "Versioning configuration",
			MarkdownDescription: "Versioning configuration",
		},
		"virtual_host": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Container virtual host",
			MarkdownDescription: "Container virtual host",
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type CloudProjectStorageModel struct {
	CreatedAt    ovhtypes.TfStringValue                            `tfsdk:"created_at" json:"createdAt"`
	Encryption   EncryptionValue                                   `tfsdk:"encryption" json:"encryption"`
	Limit        ovhtypes.TfInt64Value                             `tfsdk:"limit" json:"limit"`
	Marker       ovhtypes.TfStringValue                            `tfsdk:"marker" json:"marker"`
	Name         ovhtypes.TfStringValue                            `tfsdk:"name" json:"name"`
	Objects      ovhtypes.TfListNestedValue[ObjectsValue]          `tfsdk:"objects" json:"objects"`
	ObjectsCount ovhtypes.TfInt64Value                             `tfsdk:"objects_count" json:"objectsCount"`
	ObjectsSize  ovhtypes.TfInt64Value                             `tfsdk:"objects_size" json:"objectsSize"`
	OwnerId      ovhtypes.TfInt64Value                             `tfsdk:"owner_id" json:"ownerId"`
	Prefix       ovhtypes.TfStringValue                            `tfsdk:"prefix" json:"prefix"`
	Region       ovhtypes.TfStringValue                            `tfsdk:"region" json:"region"`
	RegionName   ovhtypes.TfStringValue                            `tfsdk:"region_name" json:"regionName"`
	Replication  ReplicationValue                                  `tfsdk:"replication" json:"replication"`
	ServiceName  ovhtypes.TfStringValue                            `tfsdk:"service_name" json:"serviceName"`
	Tags         ovhtypes.TfMapNestedValue[ovhtypes.TfStringValue] `tfsdk:"tags" json:"tags"`
	Versioning   VersioningValue                                   `tfsdk:"versioning" json:"versioning"`
	VirtualHost  ovhtypes.TfStringValue                            `tfsdk:"virtual_host" json:"virtualHost"`
}
