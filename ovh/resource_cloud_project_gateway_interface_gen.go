// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"
)

func CloudProjectGatewayInterfaceResourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"id": schema.StringAttribute{
			CustomType: ovhtypes.TfStringType{},
			Required:   true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
			Description: "ID of the gateway",
		},
		"interface_id": schema.StringAttribute{
			CustomType:  ovhtypes.TfStringType{},
			Optional:    true,
			Computed:    true,
			Description: "Interface ID",
		},
		"ip": schema.StringAttribute{
			CustomType:  ovhtypes.TfStringType{},
			Computed:    true,
			Description: "IP of the interface",
		},
		"network_id": schema.StringAttribute{
			CustomType:  ovhtypes.TfStringType{},
			Computed:    true,
			Description: "Network ID of the interface",
		},
		"region": schema.StringAttribute{
			CustomType: ovhtypes.TfStringType{},
			Required:   true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
			Description: "Region name",
		},
		"service_name": schema.StringAttribute{
			CustomType: ovhtypes.TfStringType{},
			Required:   true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
			Description: "Service name",
		},
		"subnet_id": schema.StringAttribute{
			CustomType: ovhtypes.TfStringType{},
			Required:   true,
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
			Description: "Subnet id to add",
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type CloudProjectGatewayInterfaceModel struct {
	Id          ovhtypes.TfStringValue `tfsdk:"id" json:"id"`
	InterfaceId ovhtypes.TfStringValue `tfsdk:"interface_id" json:"interfaceId"`
	Ip          ovhtypes.TfStringValue `tfsdk:"ip" json:"ip"`
	NetworkId   ovhtypes.TfStringValue `tfsdk:"network_id" json:"networkId"`
	Region      ovhtypes.TfStringValue `tfsdk:"region" json:"region"`
	ServiceName ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	SubnetId    ovhtypes.TfStringValue `tfsdk:"subnet_id" json:"subnetId"`
}

type CloudProjectGatewayInterfaceReadModel struct {
	Id          ovhtypes.TfStringValue `tfsdk:"id" json:"-"`
	InterfaceId ovhtypes.TfStringValue `tfsdk:"interface_id" json:"id"`
	Ip          ovhtypes.TfStringValue `tfsdk:"ip" json:"ip"`
	NetworkId   ovhtypes.TfStringValue `tfsdk:"network_id" json:"networkId"`
	Region      ovhtypes.TfStringValue `tfsdk:"region" json:"region"`
	ServiceName ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	SubnetId    ovhtypes.TfStringValue `tfsdk:"subnet_id" json:"subnetId"`
}

func (v *CloudProjectGatewayInterfaceReadModel) MergeWith(other *CloudProjectGatewayInterfaceModel) {
	if (v.Id.IsUnknown() || v.Id.IsNull()) && !other.Id.IsUnknown() {
		v.Id = other.Id
	}

	if (v.InterfaceId.IsUnknown() || v.InterfaceId.IsNull()) && !other.InterfaceId.IsUnknown() {
		v.InterfaceId = other.InterfaceId
	}

	if (v.Ip.IsUnknown() || v.Ip.IsNull()) && !other.Ip.IsUnknown() {
		v.Ip = other.Ip
	}

	if (v.NetworkId.IsUnknown() || v.NetworkId.IsNull()) && !other.NetworkId.IsUnknown() {
		v.NetworkId = other.NetworkId
	}

	if (v.Region.IsUnknown() || v.Region.IsNull()) && !other.Region.IsUnknown() {
		v.Region = other.Region
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}

	if (v.SubnetId.IsUnknown() || v.SubnetId.IsNull()) && !other.SubnetId.IsUnknown() {
		v.SubnetId = other.SubnetId
	}
}

func (v *CloudProjectGatewayInterfaceModel) MergeWith(other *CloudProjectGatewayInterfaceReadModel) {
	if (v.Id.IsUnknown() || v.Id.IsNull()) && !other.Id.IsUnknown() {
		v.Id = other.Id
	}

	if (v.InterfaceId.IsUnknown() || v.InterfaceId.IsNull()) && !other.InterfaceId.IsUnknown() {
		v.InterfaceId = other.InterfaceId
	}

	if (v.Ip.IsUnknown() || v.Ip.IsNull()) && !other.Ip.IsUnknown() {
		v.Ip = other.Ip
	}

	if (v.NetworkId.IsUnknown() || v.NetworkId.IsNull()) && !other.NetworkId.IsUnknown() {
		v.NetworkId = other.NetworkId
	}

	if (v.Region.IsUnknown() || v.Region.IsNull()) && !other.Region.IsUnknown() {
		v.Region = other.Region
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}

	if (v.SubnetId.IsUnknown() || v.SubnetId.IsNull()) && !other.SubnetId.IsUnknown() {
		v.SubnetId = other.SubnetId
	}
}

type CloudProjectGatewayInterfaceWritableModel struct {
	SubnetId *ovhtypes.TfStringValue `tfsdk:"subnet_id" json:"subnetId,omitempty"`
}

func (v CloudProjectGatewayInterfaceModel) ToCreate() *CloudProjectGatewayInterfaceWritableModel {
	res := &CloudProjectGatewayInterfaceWritableModel{}

	if !v.SubnetId.IsUnknown() {
		res.SubnetId = &v.SubnetId
	}

	return res
}

func (v CloudProjectGatewayInterfaceModel) ToUpdate() *CloudProjectGatewayInterfaceWritableModel {
	res := &CloudProjectGatewayInterfaceWritableModel{}

	if !v.SubnetId.IsUnknown() {
		res.SubnetId = &v.SubnetId
	}

	return res
}
