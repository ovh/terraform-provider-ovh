// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
	ovhtypes "github.com/ovh/terraform-provider-ovh/v2/ovh/types"
)

func CloudProjectFlavorDataSourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"available": schema.BoolAttribute{
			CustomType:          ovhtypes.TfBoolType{},
			Computed:            true,
			Description:         "Available in stock",
			MarkdownDescription: "Available in stock",
		},
		"capabilities": schema.ListNestedAttribute{
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"enabled": schema.BoolAttribute{
						CustomType:          ovhtypes.TfBoolType{},
						Computed:            true,
						Description:         "Is the capability enabled",
						MarkdownDescription: "Is the capability enabled",
					},
					"name": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Name of the capability",
						MarkdownDescription: "Name of the capability",
					},
				},
				CustomType: CloudProjectFlavorCapabilitiesType{
					ObjectType: types.ObjectType{
						AttrTypes: CloudProjectFlavorCapabilitiesValue{}.AttributeTypes(ctx),
					},
				},
			},
			CustomType:          ovhtypes.NewTfListNestedType[CloudProjectFlavorCapabilitiesValue](ctx),
			Computed:            true,
			Description:         "Capabilities of the flavor",
			MarkdownDescription: "Capabilities of the flavor",
		},
		"disk": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Number of disks",
			MarkdownDescription: "Number of disks",
		},

		"inbound_bandwidth": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Max capacity of inbound traffic in Mbit/s",
			MarkdownDescription: "Max capacity of inbound traffic in Mbit/s",
		},
		"name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Flavor name",
			MarkdownDescription: "Flavor name",
		},
		"os_type": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "OS to install on",
			MarkdownDescription: "OS to install on",
		},
		"outbound_bandwidth": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Max capacity of outbound traffic in Mbit/s",
			MarkdownDescription: "Max capacity of outbound traffic in Mbit/s",
		},
		"plan_codes": schema.SingleNestedAttribute{
			Attributes: map[string]schema.Attribute{
				"hourly": schema.StringAttribute{
					CustomType:          ovhtypes.TfStringType{},
					Computed:            true,
					Description:         "Plan code to order hourly instance",
					MarkdownDescription: "Plan code to order hourly instance",
				},
				"monthly": schema.StringAttribute{
					CustomType:          ovhtypes.TfStringType{},
					Computed:            true,
					Description:         "Plan code to order monthly instance",
					MarkdownDescription: "Plan code to order monthly instance",
				},
			},
			CustomType: CloudProjectFlavorPlanCodesType{
				ObjectType: types.ObjectType{
					AttrTypes: CloudProjectFlavorPlanCodesValue{}.AttributeTypes(ctx),
				},
			},
			Computed:            true,
			Description:         "Plan codes to order instances",
			MarkdownDescription: "Plan codes to order instances",
		},
		"quota": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Number instance you can spawn with your actual quota",
			MarkdownDescription: "Number instance you can spawn with your actual quota",
		},
		"ram": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Ram quantity (Gio)",
			MarkdownDescription: "Ram quantity (Gio)",
		},
		"region": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Flavor region",
			MarkdownDescription: "Flavor region",
		},
		"type": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Flavor type",
			MarkdownDescription: "Flavor type",
		},
		"vcpus": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Number of VCPUs",
			MarkdownDescription: "Number of VCPUs",
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Service name",
			MarkdownDescription: "Service name",
		},
		"id": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Flavor id",
			MarkdownDescription: "Flavor id",
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type CloudProjectFlavorModel struct {
	Available              ovhtypes.TfBoolValue                                            `tfsdk:"available" json:"available"`
	Capabilities           ovhtypes.TfListNestedValue[CloudProjectFlavorCapabilitiesValue] `tfsdk:"capabilities" json:"capabilities"`
	Disk                   ovhtypes.TfInt64Value                                           `tfsdk:"disk" json:"disk"`
	Id                     ovhtypes.TfStringValue                                          `tfsdk:"id" json:"id"`
	InboundBandwidth       ovhtypes.TfInt64Value                                           `tfsdk:"inbound_bandwidth" json:"inboundBandwidth"`
	Name                   ovhtypes.TfStringValue                                          `tfsdk:"name" json:"name"`
	OsType                 ovhtypes.TfStringValue                                          `tfsdk:"os_type" json:"osType"`
	OutboundBandwidth      ovhtypes.TfInt64Value                                           `tfsdk:"outbound_bandwidth" json:"outboundBandwidth"`
	PlanCodes              CloudProjectFlavorPlanCodesValue                                `tfsdk:"plan_codes" json:"planCodes"`
	Quota                  ovhtypes.TfInt64Value                                           `tfsdk:"quota" json:"quota"`
	Ram                    ovhtypes.TfInt64Value                                           `tfsdk:"ram" json:"ram"`
	Region                 ovhtypes.TfStringValue                                          `tfsdk:"region" json:"region"`
	CloudProjectFlavorType ovhtypes.TfStringValue                                          `tfsdk:"type" json:"type"`
	Vcpus                  ovhtypes.TfInt64Value                                           `tfsdk:"vcpus" json:"vcpus"`
	ServiceName            ovhtypes.TfStringValue                                          `tfsdk:"service_name" json:"serviceName"`
}
