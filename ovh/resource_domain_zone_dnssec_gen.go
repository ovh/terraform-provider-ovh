// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"
)

func DomainZoneDnssecResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"status": schema.StringAttribute{
				CustomType:          ovhtypes.TfStringType{},
				Computed:            true,
				Description:         "DNSSEC Status",
				MarkdownDescription: "DNSSEC Status",
			},
			"zone_name": schema.StringAttribute{
				CustomType:          ovhtypes.TfStringType{},
				Required:            true,
				Description:         "The internal name of your zone",
				MarkdownDescription: "The internal name of your zone",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
		},
	}
}

type DomainZoneDnssecModel struct {
	Status   ovhtypes.TfStringValue `tfsdk:"status" json:"status"`
	ZoneName ovhtypes.TfStringValue `tfsdk:"zone_name" json:"zoneName"`
}

func (v *DomainZoneDnssecModel) MergeWith(other *DomainZoneDnssecModel) {
	if (v.Status.IsUnknown() || v.Status.IsNull()) && !other.Status.IsUnknown() {
		v.Status = other.Status
	}

	if (v.ZoneName.IsUnknown() || v.ZoneName.IsNull()) && !other.ZoneName.IsUnknown() {
		v.ZoneName = other.ZoneName
	}
}
