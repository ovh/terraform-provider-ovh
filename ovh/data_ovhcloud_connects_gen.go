// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"
	ovhtypes "github.com/ovh/terraform-provider-ovh/v2/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func OvhcloudConnectsDataSourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"occs": schema.SetNestedAttribute{
			Computed: true,
			NestedObject: schema.NestedAttributeObject{
				Attributes: map[string]schema.Attribute{
					"bandwidth": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Service bandwidth",
						MarkdownDescription: "Service bandwidth",
					},
					"description": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Service description",
						MarkdownDescription: "Service description",
					},
					"iam": schema.SingleNestedAttribute{
						Attributes: map[string]schema.Attribute{
							"display_name": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Resource display name",
								MarkdownDescription: "Resource display name",
							},
							"id": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Unique identifier of the resource",
								MarkdownDescription: "Unique identifier of the resource",
							},
							"tags": schema.MapAttribute{
								CustomType:          ovhtypes.NewTfMapNestedType[ovhtypes.TfStringValue](ctx),
								Computed:            true,
								Description:         "Resource tags. Tags that were internally computed are prefixed with ovh:",
								MarkdownDescription: "Resource tags. Tags that were internally computed are prefixed with ovh:",
							},
							"urn": schema.StringAttribute{
								CustomType:          ovhtypes.TfStringType{},
								Computed:            true,
								Description:         "Unique resource name used in policies",
								MarkdownDescription: "Unique resource name used in policies",
							},
						},
						CustomType: IamType{
							ObjectType: types.ObjectType{
								AttrTypes: IamValue{}.AttributeTypes(ctx),
							},
						},
						Computed:            true,
						Description:         "IAM resource metadata",
						MarkdownDescription: "IAM resource metadata",
					},
					"interface_list": schema.ListAttribute{
						CustomType:          ovhtypes.NewTfListNestedType[ovhtypes.TfInt64Value](ctx),
						Computed:            true,
						Description:         "List of interfaces linked to a service",
						MarkdownDescription: "List of interfaces linked to a service",
					},
					"pop": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Pop reference where the service is delivered",
						MarkdownDescription: "Pop reference where the service is delivered",
					},
					"port_quantity": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Port quantity",
						MarkdownDescription: "Port quantity",
					},
					"product": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Product name of the service",
						MarkdownDescription: "Product name of the service",
					},
					"provider_name": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Service provider",
						MarkdownDescription: "Service provider",
					},
					"service_name": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Required:            true,
						Description:         "Service name",
						MarkdownDescription: "Service name",
					},
					"status": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Service status",
						MarkdownDescription: "Service status",
					},
					"uuid": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "Service UUID",
						MarkdownDescription: "Service UUID",
					},
					"vrack": schema.StringAttribute{
						CustomType:          ovhtypes.TfStringType{},
						Computed:            true,
						Description:         "vrack linked to the service",
						MarkdownDescription: "vrack linked to the service",
					},
				},
			},
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type OvhcloudConnectsModel struct {
	Occs []OvhcloudConnectModel `tfsdk:"occs"`
}
