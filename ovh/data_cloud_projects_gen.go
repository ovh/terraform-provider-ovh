// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/datasource/schema"
	"github.com/hashicorp/terraform-plugin-framework/types"
)

func CloudProjectsDataSourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"projects": schema.SetNestedAttribute{
				Computed: true,
				NestedObject: schema.NestedAttributeObject{
					Attributes: map[string]schema.Attribute{
						"access": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Project access",
							MarkdownDescription: "Project access",
						},
						"creation_date": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Project creation date",
							MarkdownDescription: "Project creation date",
						},
						"description": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Description of your project",
							MarkdownDescription: "Description of your project",
						},
						"expiration": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Expiration date of your project. After this date, your project will be deleted",
							MarkdownDescription: "Expiration date of your project. After this date, your project will be deleted",
						},
						"iam": schema.SingleNestedAttribute{
							Attributes: map[string]schema.Attribute{
								"display_name": schema.StringAttribute{
									CustomType:          ovhtypes.TfStringType{},
									Computed:            true,
									Description:         "Resource display name",
									MarkdownDescription: "Resource display name",
								},
								"id": schema.StringAttribute{
									CustomType:          ovhtypes.TfStringType{},
									Computed:            true,
									Description:         "Unique identifier of the resource",
									MarkdownDescription: "Unique identifier of the resource",
								},
								"tags": schema.MapAttribute{
									CustomType:          ovhtypes.NewTfMapNestedType[ovhtypes.TfStringValue](ctx),
									Computed:            true,
									Description:         "Resource tags. Tags that were internally computed are prefixed with ovh:",
									MarkdownDescription: "Resource tags. Tags that were internally computed are prefixed with ovh:",
								},
								"urn": schema.StringAttribute{
									CustomType:          ovhtypes.TfStringType{},
									Computed:            true,
									Description:         "Unique resource name used in policies",
									MarkdownDescription: "Unique resource name used in policies",
								},
							},
							CustomType: IamType{
								ObjectType: types.ObjectType{
									AttrTypes: IamValue{}.AttributeTypes(ctx),
								},
							},
							Computed:            true,
							Description:         "IAM resource metadata",
							MarkdownDescription: "IAM resource metadata",
						},
						"manual_quota": schema.BoolAttribute{
							CustomType:          ovhtypes.TfBoolType{},
							Computed:            true,
							Description:         "Manual quota prevent automatic quota upgrade",
							MarkdownDescription: "Manual quota prevent automatic quota upgrade",
						},
						"order_id": schema.Int64Attribute{
							CustomType:          ovhtypes.TfInt64Type{},
							Computed:            true,
							Description:         "Project order id",
							MarkdownDescription: "Project order id",
						},
						"plan_code": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Order plan code",
							MarkdownDescription: "Order plan code",
						},
						"project_id": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Project id",
							MarkdownDescription: "Project id",
						},
						"project_name": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Project name",
							MarkdownDescription: "Project name",
						},
						"service_name": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Service name",
							MarkdownDescription: "Service name",
						},
						"status": schema.StringAttribute{
							CustomType:          ovhtypes.TfStringType{},
							Computed:            true,
							Description:         "Current status",
							MarkdownDescription: "Current status",
						},
						"unleash": schema.BoolAttribute{
							CustomType:          ovhtypes.TfBoolType{},
							Computed:            true,
							Description:         "Project unleashed",
							MarkdownDescription: "Project unleashed",
						},
					},
				},
			},
		},
	}
}

type CloudProjectsModel struct {
	Projects []CloudProjectModel `tfsdk:"projects"`
}
