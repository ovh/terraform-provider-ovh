// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	ovhtypes "github.com/ovh/terraform-provider-ovh/v2/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
)

func CloudProjectVolumeBackupResourceSchema(ctx context.Context) schema.Schema {
	attrs := map[string]schema.Attribute{
		"creation_date": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Creation date of the backup",
			MarkdownDescription: "Creation date of the backup",
		},
		"id": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Volume backup id",
			MarkdownDescription: "Volume backup id",
		},
		"name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Optional:            true,
			Computed:            true,
			Description:         "name of the backup",
			MarkdownDescription: "name of the backup",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"region": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Volume backup region",
			MarkdownDescription: "Volume backup region",
		},
		"region_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Region name",
			MarkdownDescription: "Region name",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"service_name": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "Service name",
			MarkdownDescription: "Service name",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
		"size": schema.Int64Attribute{
			CustomType:          ovhtypes.TfInt64Type{},
			Computed:            true,
			Description:         "Size of the backup in GiB",
			MarkdownDescription: "Size of the backup in GiB",
		},
		"status": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Computed:            true,
			Description:         "Staus of the backup",
			MarkdownDescription: "Staus of the backup",
		},
		"volume_id": schema.StringAttribute{
			CustomType:          ovhtypes.TfStringType{},
			Required:            true,
			Description:         "ID of the volume to backup",
			MarkdownDescription: "ID of the volume to backup",
			PlanModifiers: []planmodifier.String{
				stringplanmodifier.RequiresReplace(),
			},
		},
	}

	return schema.Schema{
		Attributes: attrs,
	}
}

type CloudProjectVolumeBackupModel struct {
	CreationDate ovhtypes.TfStringValue `tfsdk:"creation_date" json:"creationDate"`
	Id           ovhtypes.TfStringValue `tfsdk:"id" json:"id"`
	Name         ovhtypes.TfStringValue `tfsdk:"name" json:"name"`
	Region       ovhtypes.TfStringValue `tfsdk:"region" json:"region"`
	RegionName   ovhtypes.TfStringValue `tfsdk:"region_name" json:"regionName"`
	ServiceName  ovhtypes.TfStringValue `tfsdk:"service_name" json:"serviceName"`
	Size         ovhtypes.TfInt64Value  `tfsdk:"size" json:"size"`
	Status       ovhtypes.TfStringValue `tfsdk:"status" json:"status"`
	VolumeId     ovhtypes.TfStringValue `tfsdk:"volume_id" json:"volumeId"`
}

func (v *CloudProjectVolumeBackupModel) MergeWith(other *CloudProjectVolumeBackupModel) {
	if (v.CreationDate.IsUnknown() || v.CreationDate.IsNull()) && !other.CreationDate.IsUnknown() {
		v.CreationDate = other.CreationDate
	}

	if (v.Id.IsUnknown() || v.Id.IsNull()) && !other.Id.IsUnknown() {
		v.Id = other.Id
	}

	if (v.Name.IsUnknown() || v.Name.IsNull()) && !other.Name.IsUnknown() {
		v.Name = other.Name
	}

	if (v.Region.IsUnknown() || v.Region.IsNull()) && !other.Region.IsUnknown() {
		v.Region = other.Region
	}

	if (v.RegionName.IsUnknown() || v.RegionName.IsNull()) && !other.RegionName.IsUnknown() {
		v.RegionName = other.RegionName
	}

	if (v.ServiceName.IsUnknown() || v.ServiceName.IsNull()) && !other.ServiceName.IsUnknown() {
		v.ServiceName = other.ServiceName
	}

	if (v.Size.IsUnknown() || v.Size.IsNull()) && !other.Size.IsUnknown() {
		v.Size = other.Size
	}

	if (v.Status.IsUnknown() || v.Status.IsNull()) && !other.Status.IsUnknown() {
		v.Status = other.Status
	}

	if (v.VolumeId.IsUnknown() || v.VolumeId.IsNull()) && !other.VolumeId.IsUnknown() {
		v.VolumeId = other.VolumeId
	}
}

type CloudProjectVolumeBackupWritableModel struct {
	Name     *ovhtypes.TfStringValue `tfsdk:"name" json:"name,omitempty"`
	VolumeId *ovhtypes.TfStringValue `tfsdk:"volume_id" json:"volumeId,omitempty"`
}

func (v CloudProjectVolumeBackupModel) ToCreate() *CloudProjectVolumeBackupWritableModel {
	res := &CloudProjectVolumeBackupWritableModel{}

	if !v.Name.IsUnknown() {
		res.Name = &v.Name
	}

	if !v.VolumeId.IsUnknown() {
		res.VolumeId = &v.VolumeId
	}

	return res
}
