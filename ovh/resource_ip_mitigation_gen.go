// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package ovh

import (
	"context"

	ovhtypes "github.com/ovh/terraform-provider-ovh/ovh/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/planmodifier"
	"github.com/hashicorp/terraform-plugin-framework/resource/schema/stringplanmodifier"
)

func IpMitigationResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"auto": schema.BoolAttribute{
				CustomType:          ovhtypes.TfBoolType{},
				Computed:            true,
				Description:         "Set on true if your ip is on auto-mitigation",
				MarkdownDescription: "Set on true if your ip is on auto-mitigation",
			},
			"ip": schema.StringAttribute{
				CustomType:          ovhtypes.TfStringType{},
				Required:            true,
				Description:         "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
				MarkdownDescription: "IP (v4 or v6) CIDR notation (e.g., 192.0.2.0/24)",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"ip_on_mitigation": schema.StringAttribute{
				CustomType:          ovhtypes.TfStringType{},
				Required:            true,
				Description:         "IPv4 address (e.g., 192.0.2.0)",
				MarkdownDescription: "IPv4 address (e.g., 192.0.2.0)",
				PlanModifiers: []planmodifier.String{
					stringplanmodifier.RequiresReplace(),
				},
			},
			"permanent": schema.BoolAttribute{
				CustomType:          ovhtypes.TfBoolType{},
				Computed:            true,
				Optional:            true,
				Description:         "Set on true if your ip is on permanent mitigation",
				MarkdownDescription: "Set on true if your ip is on permanent mitigation",
			},
			"state": schema.StringAttribute{
				CustomType:          ovhtypes.TfStringType{},
				Computed:            true,
				Description:         "Current state of your ip on mitigation",
				MarkdownDescription: "Current state of your ip on mitigation",
			},
		},
	}
}

type IpMitigationModel struct {
	Auto           ovhtypes.TfBoolValue   `tfsdk:"auto" json:"auto"`
	Ip             ovhtypes.TfStringValue `tfsdk:"ip" json:"ip"`
	IpOnMitigation ovhtypes.TfStringValue `tfsdk:"ip_on_mitigation" json:"ipOnMitigation"`
	Permanent      ovhtypes.TfBoolValue   `tfsdk:"permanent" json:"permanent"`
	State          ovhtypes.TfStringValue `tfsdk:"state" json:"state"`
}

func (v *IpMitigationModel) MergeWith(other *IpMitigationModel) {
	if (v.Auto.IsUnknown() || v.Auto.IsNull()) && !other.Auto.IsUnknown() {
		v.Auto = other.Auto
	}

	if (v.Ip.IsUnknown() || v.Ip.IsNull()) && !other.Ip.IsUnknown() {
		v.Ip = other.Ip
	}

	if (v.IpOnMitigation.IsUnknown() || v.IpOnMitigation.IsNull()) && !other.IpOnMitigation.IsUnknown() {
		v.IpOnMitigation = other.IpOnMitigation
	}

	if (v.Permanent.IsUnknown() || v.Permanent.IsNull()) && !other.Permanent.IsUnknown() {
		v.Permanent = other.Permanent
	}

	if (v.State.IsUnknown() || v.State.IsNull()) && !other.State.IsUnknown() {
		v.State = other.State
	}
}

type IpMitigationWritableModel struct {
	IpOnMitigation *ovhtypes.TfStringValue `tfsdk:"ip_on_mitigation" json:"ipOnMitigation,omitempty"`
	Permanent      *ovhtypes.TfBoolValue   `tfsdk:"permanent" json:"permanent,omitempty"`
}

func (v IpMitigationModel) ToCreate() *IpMitigationWritableModel {
	res := &IpMitigationWritableModel{}

	if !v.IpOnMitigation.IsUnknown() {
		res.IpOnMitigation = &v.IpOnMitigation
	}

	return res
}

func (v IpMitigationModel) ToUpdate() *IpMitigationWritableModel {
	res := &IpMitigationWritableModel{}

	if !v.Permanent.IsUnknown() {
		res.Permanent = &v.Permanent
	}

	return res
}
