---
layout: "ovh"
page_title: "OVH: ovh_dbaas_logs_cluster"
sidebar_current: "docs-ovh-resource-dbaas-logs-cluster"
description: |-
  Manage a existing dbaas logs cluster.
---

# ovh_dbaas_logs_cluster

Reference a DBaaS logs cluster to manipulate ACL on a `DEDICATED` cluster
type.

!> An LDP cluster can't be created and deleted via Terraform at this time. So when Terraform destroys the resource, it only actually restores it to its initial state.

## Example Usage

```hcl
resource "ovh_dbaas_logs_cluster" "ldp" {
  service_name     = "ldp-xx-xxxxx"

  archive_allowed_networks       = ["10.0.0.0/16"]
  direct_input_allowed_networks  = ["10.0.0.0/16"]
  query_allowed_networks         = ["10.0.0.0/16"]
}
```

## Argument Reference

The following arguments are supported:

* `archive_allowed_networks` - List of IP blocks
* `direct_input_allowed_networks` - List of IP blocks
* `query_allowed_networks` - List of IP blocks

## Attributes Reference

Id is set to the input Id. In addition, the following attributes are exported:
* `cluster_type` is type of cluster (DEDICATED, PRO or TRIAL)
* `dedicated_input_pem` is PEM for dedicated inputs
* `archive_allowed_networks` is allowed networks for ARCHIVE flow type
* `direct_input_allowed_networks` is allowed networks for DIRECT_INPUT flow type
* `direct_input_pem` is PEM for direct inputs
* `hostname` is cluster hostname hosting the tenant
* `is_default` is true if all content generated by given service will be placed on this cluster
* `is_unlocked` is true if given service can perform advanced operations on cluster
* `query_allowed_networks` is allowed networks for QUERY flow type
* `region` is datacenter localization

## Import

OVHcloud DBaaS Log Data Platform clusters can be imported using the `service_name` and `id` of the cluster, separated by "/" E.g.,

```bash
$ terraform import ovh_dbaas_logs_cluster.ldp service_name/id
```
